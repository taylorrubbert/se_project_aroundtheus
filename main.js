!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__save",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input-error",errorClass:"modal__error"};class t{constructor(e,t,s,r,i){this.name=e.name,this.link=e.link,this._id=e._id,this._isLiked=e.isLiked,this._userId=e._userId,this._cardSelector=t,this._handleImageClick=s,this._handleDeleteClick=r,this._handleLikeClick=i,this._previewImageElement=null}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card__content").cloneNode(!0)}_setEventListeners(){this._likeButton=this._cardElement.querySelector("#like-button"),this._likeButton.addEventListener("click",(()=>this._handleLikeClick(this._id,this))),this._deleteButton=this._cardElement.querySelector("#delete-button").addEventListener("click",(()=>this._handleDeleteClick(this._id,this))),this._cardImageElement=this._cardElement.querySelector("#card-image"),this._cardImageElement.addEventListener("click",(()=>{this._handleImageClick({name:this.name,link:this.link})}))}_handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}getIsLikedState(){return this._isLiked}updateLikes(){this._isLiked?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}flipLikeState(){this._isLiked=!this._isLiked}getView(){return this._cardElement=this._getTemplate(),this._likeButton=this._cardElement.querySelector("#like-button"),this._deleteButton=this._cardElement.querySelector("#delete-button"),this._cardImageElement=this._cardElement.querySelector("#card-image"),this._cardTitleElement=this._cardElement.querySelector("#card-title"),this.updateLikes(),this._cardImageElement.src=this.link,this._cardImageElement.alt=this.name,this._cardTitleElement.textContent=this.name,this._setEventListeners(),this._cardElement}}class s{constructor(e,t){this._formElement=t,this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass}_showInputError(e){this._errorMessage=this._formElement.querySelector(`#${e.id}-error`),e.classList.add(this._inputErrorClass),this._errorMessage.textContent=e.validationMessage,this._errorMessage.classList.add(this._errorClass)}_hideInputError(e){this._errorMessage=this._formElement.querySelector(`#${e.id}-error`),e.classList.remove(this._inputErrorClass),this._errorMessage.textContent="",this._errorMessage.classList.add(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(){return!this._inputElements.every((e=>e.validity.valid))}toggleButtonState(){this._hasInvalidInput()?this._disableSubmitButton():this._enableSubmitButton()}_enableSubmitButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_disableSubmitButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_setEventListeners(){this._inputElements=[...this._formElement.querySelectorAll(this._inputSelector)],this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._inputElements.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}resetForm(){this._inputElements.forEach((e=>this._hideInputError(e))),this._disableSubmitButton()}enableValidation(e){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class r{constructor(e){let{popupSelector:t}=e;this._popupSelector=t,this._popupElement=document.querySelector(t)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.querySelector(".modal__close").addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("mousedown",(e=>{e.target.classList.contains("modal_opened")&&this.close()}))}}class i extends r{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputList=[...this._popupForm.querySelectorAll(".modal__input")],this._submitButton=this._popupElement.querySelector(".modal__save"),this._submitButtonText=this._submitButton.textContent}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitButton.textContent=e?t:this._submitButtonText}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this._popupForm.reset()}))}}class n{constructor(e,t){let{items:s,renderer:r}=e;this._item=s,this._renderer=r,this._classSection=t}renderItems(){this._item.forEach((e=>{this._renderer(e)}))}addItem(e){this._classSection.prepend(e)}setItems(e){this._items=e}}const o=document.querySelector(".card__list"),a=document.querySelector("#profile-edit-modal").querySelector(".modal__form"),l=document.querySelector("#profile-edit-btn"),d=document.querySelector("#profile-title-input"),h=document.querySelector("#profile-description-input"),c=document.querySelector("#edit-avatar-form"),u=document.querySelector(".profile__avatar-edit-button"),_=document.querySelector("#add-card-modal").querySelector(".modal__form"),m=document.querySelector(".profile__add-button"),p=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_handleResponse(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}_request(e,t){return fetch(e,t).then(this._handleResponse)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._handleResponse)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._handleResponse)}updateProfileInfo(e){let{name:t,description:s}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:s})}).then(this._handleResponse)}addCard(e){let{name:t,link:s}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})}).then(this._handleResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._handleResponse)}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._handleResponse)}unlikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._handleResponse)}updateProfileAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._handleResponse)}getAppData(){return Promise.all([this.getUserInfo(),this.getInitialCards()])}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"9d8df36b-440d-4bca-949a-3193d9385b7e","Content-Type":"application/json"}}),E=new i("#profile-edit-modal",(function(e){E.renderLoading(!0),p.updateProfileInfo(e).then((()=>{const t=e.name,s=e.description;k.setUserInfo({name:t,description:s}),E.close()})).catch((e=>{console.error(e),alert(`${e}, Could not update user info!`)})).finally((()=>{E.renderLoading(!1)}))}));E.setEventListeners();const v=new i("#avatar-edit-modal",(function(e){v.renderLoading(!0),p.updateProfileAvatar(e.url).then((e=>{k.setUserAvatar(e),v.close()})).catch(console.error).finally((()=>{v.renderLoading(!1)}))}));let f;v.setEventListeners();const S=new i("#add-card-modal",(function(e){S.renderLoading(!0),p.addCard({name:e.title,link:e.url}).then((e=>{g.addItem(C(e)),_.reset(),S.close(),q.resetForm()})).catch(console.error).finally((()=>{S.renderLoading(!1)}))}));S.setEventListeners();const L=new class extends r{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._submitButton=this._popupElement.querySelector(".modal__save"),this._submitButtonText=this._submitButton.textContent}handleDeleteConfirm(e){this._handleDeleteConfirm=e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleDeleteConfirm()}))}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Deleting...";this._submitButton.textContent=e?t:this._submitButtonText}}({popupSelector:"#delete-card-modal"});L.setEventListeners();const b=new class extends r{constructor(e){super({popupSelector:e}),this._previewImage=this._popupElement.querySelector("#preview-image"),this._previewImageTitle=this._popupElement.querySelector("#preview-image-title")}open(e){let{name:t,link:s}=e;this._previewImage.src=s,this._previewImage.alt=t,this._previewImageTitle.textContent=t,super.open()}}("#preview-modal");let g;b.setEventListeners(),p.getAppData().then((e=>{let[t,s]=e;k.setUserInfo({name:t.name,description:t.about}),k.setUserAvatar({avatar:t.avatar}),f=t._id,g=new n({items:s,renderer:e=>{g.addItem(C(e))}},o),g.renderItems()})).catch(console.error);const k=new class{constructor(e){let{name:t,description:s,avatar:r}=e;this._name=document.querySelector(t),this._description=document.querySelector(s),this._avatar=document.querySelector(r)}getUserInfo(){return{name:this._name.textContent,description:this._description.textContent}}setUserInfo(e){let{name:t,description:s}=e;this._name.textContent=t,this._description.textContent=s}setUserAvatar(e){let{avatar:t}=e;this._avatar.src=t}}({name:".profile__title",description:".profile__description",avatar:".profile__image"});function C(e){return new t(e,"#card-template",y,I,B).getView()}function y(e,t){b.open(e,t)}function I(e,t){L.open(),L.handleDeleteConfirm((()=>{L.renderLoading(!0),p.deleteCard(e).then((()=>{I(),t._handleDeleteCard(),L.close()})).catch(console.error).finally((()=>{L.renderLoading(!1)}))}))}function B(e,t){t.getIsLikedState()?p.unlikeCard(e).then((e=>{t.flipLikeState(),t.updateLikes(e.isLiked)})).catch(console.error):p.likeCard(e).then((e=>{t.flipLikeState(),t.updateLikes(e.isLiked)})).catch(console.error)}l.addEventListener("click",(()=>{const e=k.getUserInfo();d.value=e.name,h.value=e.description,E.open()})),u.addEventListener("click",(()=>{v.open(),w.resetForm()})),m.addEventListener("click",(()=>{S.open(),q.toggleButtonState()}));const q=new s(e,_);q.enableValidation(),new s(e,a).enableValidation();const w=new s(e,c);w.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,